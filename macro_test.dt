;; (define some (+ 5 5))
;; 
;; (let ((more (* some 10)))
;;   (defmacro jarl (x)
;;     (cons "quote" (list 1 2 (* more x)))))
;; 
;; (defmacro jorl (y)
;;   (let ((val (if (> y 0)
;;                y
;;                (jorl 1))))
;;     (list 7 8 val)))
;; 
;; (defmacro fortytwo ()
;;   42)


;; (jorl 0)
;; 
;; (jarl 10)
;; 
;; (fortytwo)
;; 
;; (console.log (fortytwo))

(console.log 32)

;; Still doesn't know how to bind functions

;;(define (jarl a)
;;  (console.log a))
